levels = c(1, 2, 3),
labels = c("general", "academic", "vocational"),
ordered = FALSE)
tapply(hsb2$science, hsb2$female, mean)
tapply(hsb2$science, hsb2$ses, mean)
tapply(hsb2$science, (list(hsb2$female, hsb2$ses)), mean)
student_math_quartile <- hsb2$math
quantile(student_math_quartile)
sorted_math_score <- sort(student_math_quartile)
# randomly selected 1000 scores from a normal distr. with a mean of 100 and SD of 15.
rand_norms <- rnorm(1000, 100, 15)
# use the cut function to organize data into four bins
rand_norms_new <- cut(rand_norms,
breaks = c(80, 100, 120, Inf),
labels = c("0-80", "80-100", "100-120"))
table(rand_norms_new)
prop.table(table(rand_norms_new))
# I created three different matrices.
matrix_a <- matrix(c(4, 2, 6, 2, 3, 6),
nrow = 3,
ncol = 2)
matrix_b <- matrix(c(7, 2, 3, 5),
nrow = 2,
ncol = 2)
matrix_c <- matrix(c(8, 1, 1, 5, 3, 7, 1, 4, 2),
nrow = 3,
ncol = 3)
hsb2 <- read.csv(here("Data", "hsb2.csv"))
library(here)
# Created a vector that contains 100 random values from a normal distr. with a mean of 50 and an SD of 10.
# vector_a <- 1:100
vector_a <- rnorm(100, 50, 10)
# I selected the 1st, 3rd, and 8th elements of the vector.
vector_b <- vector_a[c(1, 3, 8)]
# I created a vector with all elements of vector a except the 10th and 15th element
vector_c <- vector_a[c(-10, -15)]
# I created a vector with all elements of vector a less than 40.
vector_d <- vector_a[vector_a < 40]
length(vector_d)
length(vector_a > 0)
range(vector_a)
vector_e <- sort(vector_a)
vector_f <- seq(2, 100, by = 2)
vector_g <- rev(vector_f)
vector_h <- c(vector_f, vector_g)
# I created three different matrices.
matrix_a <- matrix(c(4, 2, 6, 2, 3, 6),
nrow = 3,
ncol = 2)
matrix_b <- matrix(c(7, 2, 3, 5),
nrow = 2,
ncol = 2)
matrix_c <- matrix(c(8, 1, 1, 5, 3, 7, 1, 4, 2),
nrow = 3,
ncol = 3)
# I extracted data from the first row and second column of matrix a and stored it in my value.
my_value <- matrix_a[1,2]
my_value
#I created a new matrix with the bottom two rows of matrix a.
matrix_d <- matrix_a[-1,]
colnames(matrix_a) <- c("var_1", "var_2")
rownames(matrix_a) <- c("Bob", "Mary", "Shameeka")
# I transposed matrix c and stored the results in matrix e.
matrix_e <- t(matrix_c)
matrix_e <- matrix_e + 5
hsb2 <- read.csv(here("Data", "hsb2.csv"))
hsb2_matrix <- matrix(c(hsb2$read, hsb2$write, hsb2$math, hsb2$science, hsb2$socst),
ncol = 5)
colnames(hsb2_matrix) <- c("read", "write", "math", "science", "socst")
hsb2_matrix
class(hsb2_matrix)
# I calculated the means of each of the rows in hsb2_trans. They are in the
# following order: read, write, math, science, socst.
test_means <- rowMeans(hsb2_trans)
test_means
public_scores <- as.matrix(hsb2[hsb2$schtyp == 1, 7:11])
rownames(public_scores) <- NULL
private_scores <- as.matrix(hsb2[hsb2$schtyp == 2, 7:11])
rownames(private_scores) <- NULL
class(public_scores)
public <- subset(hsb2, hsb2$schtyp == 1)
private <- subset(hsb2, hsb2$schtyp == 2)
public_scores <- matrix(c(public$read,
public$write,
public$math,
public$science,
public$socst),
nrow = 168,
ncol = 5)
private_scores <- matrix(c(private$read,
private$write,
private$math,
private$science,
private$socst),
nrow = 32,
ncol = 5)
public <- subset(hsb2, hsb2$schtyp == 1)
private <- subset(hsb2, hsb2$schtyp == 2)
public_scores <- matrix(c(public$read,
public$write,
public$math,
public$science,
public$socst),
nrow = nrow(public),
ncol = 5)
private_scores <- matrix(c(private$read,
private$write,
private$math,
private$science,
private$socst),
nrow = nrow(private),
ncol = 5)
class(scores_array)
library(here)
# Created a vector that contains 100 random values from a normal distr. with a mean of 50 and an SD of 10.
# vector_a <- 1:100
vector_a <- rnorm(100, 50, 10)
# I selected the 1st, 3rd, and 8th elements of the vector.
vector_b <- vector_a[c(1, 3, 8)]
# I created a vector with all elements of vector a except the 10th and 15th element
vector_c <- vector_a[c(-10, -15)]
# I created a vector with all elements of vector a less than 40.
vector_d <- vector_a[vector_a < 40]
length(vector_d)
length(vector_a > 0)
range(vector_a)
vector_e <- sort(vector_a)
vector_f <- seq(2, 100, by = 2)
vector_g <- rev(vector_f)
vector_h <- c(vector_f, vector_g)
# I created three different matrices.
matrix_a <- matrix(c(4, 2, 6, 2, 3, 6),
nrow = 3,
ncol = 2)
matrix_b <- matrix(c(7, 2, 3, 5),
nrow = 2,
ncol = 2)
matrix_c <- matrix(c(8, 1, 1, 5, 3, 7, 1, 4, 2),
nrow = 3,
ncol = 3)
# I extracted data from the first row and second column of matrix a and stored it in my value.
my_value <- matrix_a[1,2]
my_value
#I created a new matrix with the bottom two rows of matrix a.
matrix_d <- matrix_a[-1,]
colnames(matrix_a) <- c("var_1", "var_2")
rownames(matrix_a) <- c("Bob", "Mary", "Shameeka")
# I transposed matrix c and stored the results in matrix e.
matrix_e <- t(matrix_c)
matrix_e <- matrix_e + 5
hsb2 <- read.csv(here("Data", "hsb2.csv"))
hsb2_matrix <- matrix(c(hsb2$read, hsb2$write, hsb2$math, hsb2$science, hsb2$socst),
ncol = 5)
colnames(hsb2_matrix) <- c("read", "write", "math", "science", "socst")
# I transposed the hsb2_matrix I created in step 19.
hsb2_trans <- t(hsb2_matrix)
# I calculated the means of each of the rows in hsb2_trans. They are in the
# following order: read, write, math, science, socst.
test_means <- rowMeans(hsb2_trans)
public <- subset(hsb2, hsb2$schtyp == 1)
private <- subset(hsb2, hsb2$schtyp == 2)
public_scores <- matrix(c(public$read,
public$write,
public$math,
public$science,
public$socst),
nrow = nrow(public),
ncol = 5)
private_scores <- matrix(c(private$read,
private$write,
private$math,
private$science,
private$socst),
nrow = nrow(private),
ncol = 5)
public_scores <- public_scores[1:25, ]
private_scores <- private_scores[1:25, ]
scores_array <- array(c(public_scores, private_scores),
dim = c(25, 5, 2))
dimnames(scores_array) = list(c(NULL),
c("Read", "Write", "Math", "Science", "SocStud"),
c("Public School", "Private School"))
# Created a new factor.
student_class <- factor(c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4,
4, 4, 4))
levels(student_class) <- c("freshman", "sophomore", "junior", "senior")
levels(student_class) <- c("1st year", "2nd year", "3rd year", "4th year")
# excluded 1st year students from the factor.
new_student_class <- student_class[student_class != "1st year"]
# dropped the unused level from the factor.
new_student_class <- droplevels(new_student_class)
hsb2 <- read.csv(here("Data", "hsb2.csv"))
hsb2$female <- factor(hsb2$female,
levels = c(0, 1),
labels = c("male", "female"),
ordered = FALSE)
hsb2$race <- factor(hsb2$race,
levels = c(1, 2, 3, 4),
labels = c("Hispanic", "Asian", "African American",
"White"),
ordered = FALSE)
hsb2$ses <- factor(hsb2$ses,
levels = c(1, 2, 3),
labels = c("low", "middle", "high"),
ordered = TRUE)
hsb2$schtyp <- factor(hsb2$schtyp,
levels = c(1, 2),
labels = c("public", "private"),
ordered = FALSE)
hsb2$prog <- factor(hsb2$prog,
levels = c(1, 2, 3),
labels = c("general", "academic", "vocational"),
ordered = FALSE)
library(here)
Vector_A <- rnorm(100, 50, 10)
Vector_B <- Vector_A[c(1, 3, 8)]
Vector_C <- Vector_A[c(-10, -15)]
Vector_D <- Vector_A[Vector_A < 40]
length(Vector_D)
sum(sign(Vector_A) == 1)
#or
sum(Vector_A > 0)
min(Vector_A)
max(Vector_A)
Vector_E <- Vector_A[order(Vector_A)]
Vector_F <- seq(2, 100, by = 2)
Vector_G <- rev(Vector_F)
Vector_H <- Vector_F + Vector_G
A <- matrix(c(4, 2, 6, 2, 3, 6),
ncol = 2)
B <- matrix(c(7, 2, 3, 5),
ncol = 2)
C <- matrix(c(8, 1, 1, 5, 3, 7, 1, 4, 2),
ncol = 3)
my_value <- A[1, 2]
D <- A[2:3, ]
colnames(A) <- c("Var_1", "Var_2")
rownames(A) <- c("Bob", "Mary", "Shameka")
E <- t(C)
E <- E + 15
hsb2 <- read.csv(here("Data", "hsb2.csv"))
scores <- cbind(hsb2$read, hsb2$write, hsb2$math, hsb2$science, hsb2$socst)
colnames(scores) <- colnames(hsb2[7:11])
t_scores <- t(scores)
test_means <- colMeans(scores)
names(test_means) <- colnames(scores)
public_scores <- as.matrix(hsb2[hsb2$schtyp == 1, 7:11])
rownames(public_scores) <- NULL
private_scores <- as.matrix(hsb2[hsb2$schtyp == 2, 7:11])
rownames(private_scores) <- NULL
school_scores <- array(c(as.vector(public_scores[1:25, ]),
as.vector(private_scores[1:25, ])),
dim = c(25, 5, 2),
dimnames = list(NULL,
colnames(scores),
c("public", "private")))
dimnames(school_scores) <- list(NULL, NULL, NULL)
student_class <- factor(rep(1:4, each = 5),
labels = c("freshman",
"sophomore",
"junior",
"senior"))
levels(student_class) <- c("1st year", "2nd year", "3rd year", "4th year")
new_student_class <- student_class[student_class != "1st year"]
new_student_class <- droplevels(new_student_class)
hsb2 <- read.csv(here("Data", "hsb2.csv"))
hsb2$id <- factor(hsb2$id)
hsb2$female <- factor(hsb2$female,
levels = c(0, 1),
labels = c("male", "female"))
hsb2$race <- factor(hsb2$race,
levels = c(1:4),
labels = c("hispanic", "asian", "african-amer", "white"))
hsb2$ses <- factor(hsb2$ses,
levels = c(1:3),
labels = c("low", "middle", "high"),
ordered = TRUE)
hsb2$schtyp <- factor(hsb2$schtyp,
levels = c(1, 2),
labels = c("public", "private"))
hsb2$prog <- factor(hsb2$prog,
levels = c(1:3),
labels = c("general", "academic", "vocational"))
tapply(hsb2$science, hsb2$female, mean)
tapply(hsb2$science, hsb2$ses, mean)
tapply(hsb2$science, list(hsb2$female, hsb2$ses), mean)
hsb2$math_quart <- cut(hsb2$math,
breaks = c(0,
quantile(hsb2$math)[2],
quantile(hsb2$math)[3],
quantile(hsb2$math)[4],
Inf),
labels = c("Q1",
"Q2",
"Q3",
"Q4"))
hsb2$math_quart
student_math_quartile
student_math_quartile <- hsb2$math
quantile(student_math_quartile)
student_math_quartile
library(here)
Vector_A <- rnorm(100, 50, 10)
Vector_B <- Vector_A[c(1, 3, 8)]
Vector_C <- Vector_A[c(-10, -15)]
Vector_D <- Vector_A[Vector_A < 40]
length(Vector_D)
sum(sign(Vector_A) == 1)
#or
sum(Vector_A > 0)
min(Vector_A)
max(Vector_A)
Vector_E <- Vector_A[order(Vector_A)]
Vector_F <- seq(2, 100, by = 2)
Vector_G <- rev(Vector_F)
Vector_H <- Vector_F + Vector_G
A <- matrix(c(4, 2, 6, 2, 3, 6),
ncol = 2)
B <- matrix(c(7, 2, 3, 5),
ncol = 2)
C <- matrix(c(8, 1, 1, 5, 3, 7, 1, 4, 2),
ncol = 3)
my_value <- A[1, 2]
D <- A[2:3, ]
colnames(A) <- c("Var_1", "Var_2")
rownames(A) <- c("Bob", "Mary", "Shameka")
E <- t(C)
E <- E + 15
hsb2 <- read.csv(here("Data", "hsb2.csv"))
scores <- cbind(hsb2$read, hsb2$write, hsb2$math, hsb2$science, hsb2$socst)
colnames(scores) <- colnames(hsb2[7:11])
t_scores <- t(scores)
test_means <- colMeans(scores)
names(test_means) <- colnames(scores)
public_scores <- as.matrix(hsb2[hsb2$schtyp == 1, 7:11])
rownames(public_scores) <- NULL
private_scores <- as.matrix(hsb2[hsb2$schtyp == 2, 7:11])
rownames(private_scores) <- NULL
school_scores <- array(c(as.vector(public_scores[1:25, ]),
as.vector(private_scores[1:25, ])),
dim = c(25, 5, 2),
dimnames = list(NULL,
colnames(scores),
c("public", "private")))
dimnames(school_scores) <- list(NULL, NULL, NULL)
student_class <- factor(rep(1:4, each = 5),
labels = c("freshman",
"sophomore",
"junior",
"senior"))
levels(student_class) <- c("1st year", "2nd year", "3rd year", "4th year")
new_student_class <- student_class[student_class != "1st year"]
new_student_class <- droplevels(new_student_class)
hsb2 <- read.csv(here("Data", "hsb2.csv"))
hsb2$id <- factor(hsb2$id)
hsb2$female <- factor(hsb2$female,
levels = c(0, 1),
labels = c("male", "female"))
hsb2$race <- factor(hsb2$race,
levels = c(1:4),
labels = c("hispanic", "asian", "african-amer", "white"))
hsb2$ses <- factor(hsb2$ses,
levels = c(1:3),
labels = c("low", "middle", "high"),
ordered = TRUE)
hsb2$schtyp <- factor(hsb2$schtyp,
levels = c(1, 2),
labels = c("public", "private"))
hsb2$prog <- factor(hsb2$prog,
levels = c(1:3),
labels = c("general", "academic", "vocational"))
tapply(hsb2$science, hsb2$female, mean)
tapply(hsb2$science, hsb2$ses, mean)
tapply(hsb2$science, list(hsb2$female, hsb2$ses), mean)
hsb2$math_quart <- cut(hsb2$math,
breaks = c(0,
quantile(hsb2$math)[2],
quantile(hsb2$math)[3],
quantile(hsb2$math)[4],
Inf),
labels = c("Q1",
"Q2",
"Q3",
"Q4"))
hsb2 <- hsb2[order(hsb2$math), ]
rand_norms <- rnorm(1000, 100, 15)
rand_norms_categories <- cut(rand_norms, c(0, 80, 100, 120, Inf))
table(rand_norms_categories)
library(here)
# Created a vector that contains 100 random values from a normal distr. with a mean of 50 and an SD of 10.
# vector_a <- 1:100
vector_a <- rnorm(100, 50, 10)
# I selected the 1st, 3rd, and 8th elements of the vector.
vector_b <- vector_a[c(1, 3, 8)]
# I created a vector with all elements of vector a except the 10th and 15th element
vector_c <- vector_a[c(-10, -15)]
# I created a vector with all elements of vector a less than 40.
vector_d <- vector_a[vector_a < 40]
length(vector_d)
length(vector_a > 0)
range(vector_a)
vector_e <- sort(vector_a)
vector_f <- seq(2, 100, by = 2)
vector_g <- rev(vector_f)
vector_h <- c(vector_f, vector_g)
# I created three different matrices.
matrix_a <- matrix(c(4, 2, 6, 2, 3, 6),
nrow = 3,
ncol = 2)
matrix_b <- matrix(c(7, 2, 3, 5),
nrow = 2,
ncol = 2)
matrix_c <- matrix(c(8, 1, 1, 5, 3, 7, 1, 4, 2),
nrow = 3,
ncol = 3)
# I extracted data from the first row and second column of matrix a and stored it in my value.
my_value <- matrix_a[1,2]
my_value
#I created a new matrix with the bottom two rows of matrix a.
matrix_d <- matrix_a[-1,]
colnames(matrix_a) <- c("var_1", "var_2")
rownames(matrix_a) <- c("Bob", "Mary", "Shameeka")
# I transposed matrix c and stored the results in matrix e.
matrix_e <- t(matrix_c)
matrix_e <- matrix_e + 5
hsb2 <- read.csv(here("Data", "hsb2.csv"))
hsb2_matrix <- matrix(c(hsb2$read, hsb2$write, hsb2$math, hsb2$science, hsb2$socst),
ncol = 5)
colnames(hsb2_matrix) <- c("read", "write", "math", "science", "socst")
# I transposed the hsb2_matrix I created in step 19.
hsb2_trans <- t(hsb2_matrix)
# I calculated the means of each of the rows in hsb2_trans. They are in the
# following order: read, write, math, science, socst.
test_means <- rowMeans(hsb2_trans)
public <- subset(hsb2, hsb2$schtyp == 1)
private <- subset(hsb2, hsb2$schtyp == 2)
public_scores <- matrix(c(public$read,
public$write,
public$math,
public$science,
public$socst),
nrow = nrow(public),
ncol = 5)
private_scores <- matrix(c(private$read,
private$write,
private$math,
private$science,
private$socst),
nrow = nrow(private),
ncol = 5)
public_scores <- public_scores[1:25, ]
private_scores <- private_scores[1:25, ]
scores_array <- array(c(public_scores, private_scores),
dim = c(25, 5, 2))
dimnames(scores_array) = list(c(NULL),
c("Read", "Write", "Math", "Science", "SocStud"),
c("Public School", "Private School"))
# Created a new factor.
student_class <- factor(c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4,
4, 4, 4))
levels(student_class) <- c("freshman", "sophomore", "junior", "senior")
levels(student_class) <- c("1st year", "2nd year", "3rd year", "4th year")
# excluded 1st year students from the factor.
new_student_class <- student_class[student_class != "1st year"]
# dropped the unused level from the factor.
new_student_class <- droplevels(new_student_class)
hsb2 <- read.csv(here("Data", "hsb2.csv"))
hsb2$female <- factor(hsb2$female,
levels = c(0, 1),
labels = c("male", "female"),
ordered = FALSE)
hsb2$race <- factor(hsb2$race,
levels = c(1, 2, 3, 4),
labels = c("Hispanic", "Asian", "African American",
"White"),
ordered = FALSE)
hsb2$ses <- factor(hsb2$ses,
levels = c(1, 2, 3),
labels = c("low", "middle", "high"),
ordered = TRUE)
hsb2$schtyp <- factor(hsb2$schtyp,
levels = c(1, 2),
labels = c("public", "private"),
ordered = FALSE)
hsb2$prog <- factor(hsb2$prog,
levels = c(1, 2, 3),
labels = c("general", "academic", "vocational"),
ordered = FALSE)
tapply(hsb2$science, hsb2$female, mean)
tapply(hsb2$science, hsb2$ses, mean)
tapply(hsb2$science, (list(hsb2$female, hsb2$ses)), mean)
student_math_quartile <- hsb2$math
quantile(student_math_quartile)
sorted_math_score <- sort(student_math_quartile)
# randomly selected 1000 scores from a normal distr. with a mean of 100 and SD of 15.
rand_norms <- rnorm(1000, 100, 15)
# use the cut function to organize data into four bins
rand_norms_new <- cut(rand_norms, c(0, 80, 100, 120, Inf))
table(rand_norms_new)
prop.table(table(rand_norms_new))
sorted_math_score <- hsb2[order(hsb2$math), ]
student_math_quartile <- cut(hsb2$math,
breaks = c(0,
quantile(hsb2$math)[2],
quantile(hsb2$math)[3],
quantile(hsb2$math)[4],
Inf),
labels = c("Q1",
"Q2",
"Q3",
"Q4"))
student_math_quartile
