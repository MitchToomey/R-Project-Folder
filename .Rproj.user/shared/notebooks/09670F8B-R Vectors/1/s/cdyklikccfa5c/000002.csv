"0",""
"0","# Read in the data."
"0",""
"0","student_data <- read.csv(here(""Data"", ""Statistics Class Data.csv""))"
"0",""
"0","# Eliminate rows with missing data. (brute force)"
"0",""
"0","score_logical <- !is.na(student_data$Score)"
"0","Last_Name <- student_data$Last.Name[score_logical]"
"0","First_Name <- student_data$First.Name[score_logical]"
"0","Score <- student_data$Score[score_logical]"
"0","student_data <- data.frame(Last_Name, First_Name, Score)"
"0",""
"0","# Read in the data."
"0",""
"0","student_data <- read.csv(here(""Data"", ""Statistics Class Data.csv""))"
"0",""
"0","# Eliminate rows with missing data. (elegant)"
"0",""
"0","student_data <- na.omit(student_data)"
"0",""
"0","# Indicate if the score is in the IQR."
"0",""
"0","Q1 <- quantile(student_data$Score, 0.25)"
"0","Q3 <- quantile(student_data$Score, 0.75)"
"0",""
"0","student_data$IQR <- (student_data$Score > Q1) & (student_data$Score < Q3)"
"0",""
"0","# We can make this more obvious in our dataset."
"0",""
"0","student_data$IQR <- ifelse(student_data$IQR, ""In IQR"", ""Out of IQR"")"
"0",""
"0","# Of course we could have done this all in one step."
"0",""
"0","student_data$IQR <- ifelse((student_data$Score > Q1) &"
"0","                           (student_data$Score < Q3),"
"0","                           ""In IQR"","
"0","                           ""Out of IQR"")"
"0",""
"0","# Now we need to assign grades. Here's one way. (brute force)"
"0",""
"0","student_data$Grade <- 1:length(student_data$Score)"
"0",""
"0","student_data$Grade <- ifelse(student_data$Score >= 90, ""A"", student_data$Grade)"
"0",""
"0","student_data$Grade <- ifelse(student_data$Score >= 80 &"
"0","                             student_data$Score < 90, ""B"", student_data$Grade)"
"0",""
"0","student_data$Grade <- ifelse(student_data$Score >= 60 &"
"0","                             student_data$Score < 80, ""C"", student_data$Grade)"
"0",""
"0","student_data$Grade <- ifelse(student_data$Score >= 50 &"
"0","                             student_data$Score < 60, ""D"", student_data$Grade)"
"0",""
"0","student_data$Grade <- ifelse(student_data$Score < 50, ""F"", student_data$Grade)"
"0",""
"0","# Again assigning grades with a function, cutoff. We'll start by emptying"
"0","# the vector so that we know this really works. (elegant)"
"0",""
"0","student_data$Grade <- NULL"
"0",""
"0","student_data$Grade <- cut(student_data$Score,"
"0","                          c(0, 50, 60, 80, 90, Inf),"
"0","                          right = FALSE,"
"0","                          labels = c(""F"", ""D"", ""C"", ""B"", ""A""))"
"0",""
"0","# Putting it all together, here's the entire script with (perhaps) a minimal"
"0","# number of lines."
"0",""
"0","student_data <- read.csv(here(""Data"", ""Statistics Class Data.csv""))"
"0","student_data <- na.omit(student_data)"
"0",""
"0","Q1 <- quantile(student_data$Score, 0.25)"
"0","Q3 <- quantile(student_data$Score, 0.75)"
"0",""
"0","student_data$IQR <- ifelse((student_data$Score > Q1) &"
"0","                           (student_data$Score < Q3),"
"0","                           ""In IQR"","
"0","                           ""Out of IQR"")"
"0",""
"0","student_data$Grade <- cut(student_data$Score,"
"0","                          c(0, 50, 60, 80, 90, Inf),"
"0","                          right = FALSE,"
"0","                          labels = c(""F"", ""D"", ""C"", ""B"", ""A""))"
"0",""
"0","# We could have actually eliminated two more lines (to make this a four-line"
"0","# script) by doing this. Why might this be a bad idea?"
"0",""
"0","student_data$IQR <- ifelse((student_data$Score >"
"0","                              quantile(student_data$Score, 0.25)) &"
"0","                           (student_data$Score <"
"0","                              quantile(student_data$Score, 0.75)),"
"0","                           ""In IQR"","
"0","                           ""Out of IQR"")"
"0",""
"0","# It turns out that this is not a bad idea after all! Why? Because the"
"0","# logical operators in this code (> and <) are vectorized."
"0",""
