students <- read.csv(here("Data", "hsb2.csv"), header = TRUE, sep = ",")
library(here)
students <- read.csv(here("Data", "hsb2.csv"), header = TRUE, sep = ",")
students <- read.csv(here("Data", "hsb2.csv"), header = TRUE, sep = ",")
View(students)
students$ses <- factor(students$ses,
labels = c("Low", "Middle", "High"))
students$race <- factor(students$race,
labels = c("Hispanic", "Asian", "African-American",
"White"))
# The "here" library will let me read the data from an individual folder.
library(here)
# I read the data and put it in an object called "students".
students <- read.csv(here("Data", "hsb2.csv"), header = TRUE, sep = ",")
# SES and race are categorical variables, what we call "factors," so I need to
# set them as factors.
students$ses <- factor(students$ses,
labels = c("Low", "Middle", "High"))
students$race <- factor(students$race,
labels = c("Hispanic", "Asian", "African-American",
"White"))
# I calculated the frequencies of students in SES categories.
ses.counts <- table(students$ses)
# I calculated the proportions of students in SES categories.
ses.props <- prop.table(ses.counts)
# I constructed a bar graph using these proportions.
barplot(ses.props,
xlab = "SES Groups",
ylab = "Proportion", ylim = c(0, 0.5))
# I put the frequencies and proportions in a table, but there are only a few
# of these so I put those in a narrative instead of showing the table.
cbind(ses.counts, ses.props)
# This command creates side-by-side boxplots.
boxplot(students$read ~ students$ses,
ylim = c(20, 80),
xlab = "SES Level",
ylab = "Reading Score")
# I calculated descriptive statistics for reading scores of SES groups.
Mean <- tapply(students$read, students$ses, mean)
SD <- tapply(students$read, students$ses, sd)
Min <- tapply(students$read, students$ses, min)
Q1 <- tapply(students$read, students$ses, quantile, p = 0.25)
Med <-  tapply(students$read, students$ses, median)
Q3 <- tapply(students$read, students$ses, quantile, p = 0.75)
Max <- tapply(students$read, students$ses, max)
# I then created a "column bind" to put these in a table. The "round" function
# eliminates the decimal points to provide numbers easier to read and remember.
round(cbind(Mean, SD, Min, Q1, Med, Q3, Max))
# This constructs a two-way table of frequencies.
ses.race.counts = table(students$ses, students$race)
# This constructs conditional percentages (conditioned on ethnic group) of
# SES categories.
ses.race.percents = 100*prop.table(ses.race.counts, 2)
# This provides a stacked bar graph.
barplot(ses.race.percents,
xlab = "Ethnic Group",
ylab = "Percents",
legend = c("Low", "Middle", "High"),
args.legend = list(title = "SES", cex = .7))
# This provides percents. The "round" function eliminates decimal points to
# make the numbers easier to read and remember.
round(ses.race.percents)
ses.counts <- table(students$ses)
ses.counts
ses.props <- prop.table(ses.counts)
ses.props
# I calculated the frequencies of students in SES categories.
ses.counts <- table(students$ses)
# I calculated the proportions of students in SES categories.
ses.props <- prop.table(ses.counts)
# I constructed a bar graph using these proportions.
barplot(ses.props,
xlab = "SES Groups",
ylab = "Proportion", ylim = c(0, 0.5))
cbind(ses.counts, ses.props)
# I put the frequencies and proportions in a table, but there are only a few
# of these so I put those in a narrative instead of showing the table.
cbind(ses.counts, ses.props)
# I put the frequencies and proportions in a table, but there are only a few
# of these so I put those in a narrative instead of showing the table.
cbind(ses.counts, ses.props)
# This constructs a two-way table of frequencies.
ses.race.counts = table(students$ses, students$race)
# This constructs conditional percentages (conditioned on ethnic group) of
# SES categories.
ses.race.percents = 100*prop.table(ses.race.counts, 2)
# This provides a stacked bar graph.
barplot(ses.race.percents,
xlab = "Ethnic Group",
ylab = "Percents",
legend = c("Low", "Middle", "High"),
args.legend = list(title = "SES", cex = .7))
ses.race.percents
barplot(ses.race.percents,
xlab = "Ethnic Group",
ylab = "Percents",
legend = c("Low", "Middle", "High"),
args.legend = list(title = "SES", cex = .7))
ses.race.percents
round(ses.race.percents)
guns_data <- read.csv("full_data.csv", header = TRUE, sep = ",")
data_2012 <- subset(guns_data, guns_data$year == "2012")
intent.counts_12 <- table(guns_data$intent)
intent.props_12 <- prop.table(intent.counts_12)
barplot(intent.props_12,
xlab = "Intent",
ylab = "Proportion", ylim = c(0, 1))
cbind(intent.counts_12, intent.props_12)
sex.counts_12 <- table(guns_data$sex)
sex.props_12 <- prop.table(sex.counts_12)
barplot(sex.props_12,
xlab = "Sex Groups",
ylab = "Proportion", ylim = c(0, 1))
cbind(sex.counts_12, sex.props_12)
race.counts_12 <- table(guns_data$race)
race.props_12 <- prop.table(race.counts_12)
barplot(race.props_12,
xlab = "Race Groups",
ylab = "Proportion", ylim = c(0, 1), cex.names=.5)
cbind(race.counts_12, race.props_12)
install.packages("tidyverse")
install.packages("magrittr")
data_2019 <- read.csv("full_data_19.csv", header = TRUE, sep = ",")
intent.counts_19 <- table(data_2019$intent)
intent.props_19 <- prop.table(intent.counts_19)
barplot(intent.props_19,
xlab = "Intent",
ylab = "Proportion", ylim = c(0, 1))
cbind(intent.counts_19, intent.props_19)
sex.counts_19 <- table(data_2019$sex)
sex.props_19 <- prop.table(sex.counts_19)
barplot(sex.props_19,
xlab = "Sex Groups",
ylab = "Proportion", ylim = c(0, 1))
cbind(sex.counts_19, sex.props_19)
race.counts_19 <- table(data_2019$race)
race.props_19 <- prop.table(race.counts_19)
barplot(race.props_19,
xlab = "Race Groups",
ylab = "Proportion", ylim = c(0, 1), cex.names=.5)
cbind(race.counts_19, race.props_19)
intent_12_19 <- cbind(intent.counts_12, intent.counts_19)
intent_12_19_percent <- 100*prop.table(intent_12_19, 2)
barplot(intent_12_19_percent,
xlab = "Year",
ylab = "Percents",
legend = c("Accidental", "Homicide", "Suicide", "Undetermined"),
args.legend = list(title = "Intent", cex = .7))
cbind(intent_12_19, intent_12_19_percent)
sex_12_19 <- cbind(sex.counts_12, sex.counts_19)
sex_12_19_percent <- 100*prop.table(sex_12_19, 2)
barplot(sex_12_19_percent,
xlab = "Year",
ylab = "Percents",
legend = c("Female", "Male"),
args.legend = list(title = "Sex", cex = .7))
cbind(sex_12_19, sex_12_19_percent)
race_12_19 <- cbind(race.counts_12, race.counts_19)
race_12_19_percent <- 100*prop.table(race_12_19, 2)
barplot(race_12_19_percent,
xlab = "Year",
ylab = "Percents",
legend = c("Asian/Pacific Islander", "Black", "Hispanic", "Native", "White"),
args.legend = list(title = "Race", cex = .7))
cbind(race_12_19, race_12_19_percent)
