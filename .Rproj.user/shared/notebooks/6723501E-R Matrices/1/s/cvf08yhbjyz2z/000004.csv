"0",""
"0","# Let's begin with a vector of scores for 100 individuals."
"0",""
"0","n <- 100"
"0",""
"0","score <- scan(here(""scores.txt""))"
"2","Read 100 items
"
"0","# We can put this in standard matrix format, with individuals in rows"
"0","# and variables (in this case, just one variable) in columns."
"0",""
"0","dim(score) <- c(n, 1)"
"0",""
"0","# Let's also create a vector of 100 1s_ This is known as the ""summing"
"0","# vector_"" We will turn it into a matrix as well."
"0",""
"0","ones <- rep(1, n)"
"0",""
"0","dim(ones) <- c(n, 1)"
"0",""
"0","# For any score vector, x, we can obtain the sum using 1'x."
"0",""
"0","score_sum <- t(ones) %*% score"
"0",""
"0","sum(score)"
"1","[1]"
"1"," 4954"
"1","
"
"0","# So the mean is given by pre-multiplying this matrix product by 1/n."
"0",""
"0","score_mean <- (1/n) * t(ones) %*% score"
"0",""
"0","mean(score_mean)"
"1","[1]"
"1"," 49.54"
"1","
"
"0","# So now it is a simple step to deviation scores via matrices."
"0",""
"0","score_dev <- score - (ones %*% score_mean)"
"0",""
"0","# So now we can calculate the sum of squares."
"0",""
"0","score_ss <- t(score_dev) %*% score_dev"
"0",""
"0","# We could also go straight to the variance."
"0",""
"0","score_var <- (1/(n-1)) * t(score_dev) %*% score_dev"
"0",""
"0","# Let's look at an alternative way to calculate some of these statistics."
"0","# First we calculate a matrix filled with 1/n."
"0",""
"0","P <- (ones %*% t(ones))/n"
"0",""
"0","# Next we calculate the identity matrix. The identity matrix has ones in"
"0","# the diagonal."
"0",""
"0","I <- diag(100)"
"0",""
"0","# This is called the identity matrix because if you multiply it by any"
"0","# matrix, you get back the original matrix."
"0",""
"0","I %*% score"
"1","      "
"1"," [,1]"
"1","
  [1,]"
"1","   36"
"1","
  [2,]"
"1","   48"
"1","
  [3,]"
"1","   45"
"1","
  [4,]"
"1","   47"
"1","
  [5,]"
"1","   41"
"1","
  [6,]"
"1","   36"
"1","
  [7,]"
"1","   47"
"1","
  [8,]"
"1","   35"
"1","
  [9,]"
"1","   45"
"1","
 [10,]"
"1","   57"
"1","
 [11,]"
"1","   57"
"1","
 [12,]"
"1","   51"
"1","
 [13,]"
"1","   44"
"1","
 [14,]"
"1","   54"
"1","
 [15,]"
"1","   60"
"1","
 [16,]"
"1","   49"
"1","
 [17,]"
"1","   67"
"1","
 [18,]"
"1","   37"
"1","
 [19,]"
"1","   35"
"1","
 [20,]"
"1","   37"
"1","
 [21,]"
"1","   47"
"1","
 [22,]"
"1","   46"
"1","
 [23,]"
"1","   46"
"1","
 [24,]"
"1","   39"
"1","
 [25,]"
"1","   53"
"1","
 [26,]"
"1","   58"
"1","
 [27,]"
"1","   57"
"1","
 [28,]"
"1","   51"
"1","
 [29,]"
"1","   60"
"1","
 [30,]"
"1","   52"
"1","
 [31,]"
"1","   56"
"1","
 [32,]"
"1","   54"
"1","
 [33,]"
"1","   40"
"1","
 [34,]"
"1","   62"
"1","
 [35,]"
"1","   58"
"1","
 [36,]"
"1","   46"
"1","
 [37,]"
"1","   55"
"1","
 [38,]"
"1","   56"
"1","
 [39,]"
"1","   44"
"1","
 [40,]"
"1","   32"
"1","
 [41,]"
"1","   35"
"1","
 [42,]"
"1","   49"
"1","
 [43,]"
"1","   70"
"1","
 [44,]"
"1","   44"
"1","
 [45,]"
"1","   48"
"1","
 [46,]"
"1","   34"
"1","
 [47,]"
"1","   51"
"1","
 [48,]"
"1","   66"
"1","
 [49,]"
"1","   42"
"1","
 [50,]"
"1","   40"
"1","
 [51,]"
"1","   62"
"1","
 [52,]"
"1","   51"
"1","
 [53,]"
"1","   52"
"1","
 [54,]"
"1","   44"
"1","
 [55,]"
"1","   67"
"1","
 [56,]"
"1","   44"
"1","
 [57,]"
"1","   74"
"1","
 [58,]"
"1","   42"
"1","
 [59,]"
"1","   38"
"1","
 [60,]"
"1","   54"
"1","
 [61,]"
"1","   56"
"1","
 [62,]"
"1","   65"
"1","
 [63,]"
"1","   40"
"1","
 [64,]"
"1","   46"
"1","
 [65,]"
"1","   57"
"1","
 [66,]"
"1","   45"
"1","
 [67,]"
"1","   51"
"1","
 [68,]"
"1","   52"
"1","
 [69,]"
"1","   41"
"1","
 [70,]"
"1","   44"
"1","
 [71,]"
"1","   72"
"1","
 [72,]"
"1","   54"
"1","
 [73,]"
"1","   31"
"1","
 [74,]"
"1","   63"
"1","
 [75,]"
"1","   48"
"1","
 [76,]"
"1","   59"
"1","
 [77,]"
"1","   54"
"1","
 [78,]"
"1","   46"
"1","
 [79,]"
"1","   46"
"1","
 [80,]"
"1","   47"
"1","
 [81,]"
"1","   52"
"1","
 [82,]"
"1","   38"
"1","
 [83,]"
"1","   49"
"1","
 [84,]"
"1","   38"
"1","
 [85,]"
"1","   50"
"1","
 [86,]"
"1","   51"
"1","
 [87,]"
"1","   36"
"1","
 [88,]"
"1","   66"
"1","
 [89,]"
"1","   56"
"1","
 [90,]"
"1","   63"
"1","
 [91,]"
"1","   34"
"1","
 [92,]"
"1","   54"
"1","
 [93,]"
"1","   50"
"1","
 [94,]"
"1","   57"
"1","
 [95,]"
"1","   38"
"1","
 [96,]"
"1","   48"
"1","
 [97,]"
"1","   61"
"1","
 [98,]"
"1","   53"
"1","
 [99,]"
"1","   55"
"1","
[100,]"
"1","   41"
"1","
"
"0","# Now we are going to calculate what is known as the ""projection matrix""."
"0",""
"0","Q = I - P"
"0",""
"0","# Watch what happens when we pre-multiply our scores by Q."
"0",""
"0","Q %*% score"
"1","      "
"1","   [,1]"
"1","
  [1,]"
"1"," -13.54"
"1","
  [2,]"
"1","  -1.54"
"1","
  [3,]"
"1","  -4.54"
"1","
  [4,]"
"1","  -2.54"
"1","
  [5,]"
"1","  -8.54"
"1","
  [6,]"
"1"," -13.54"
"1","
  [7,]"
"1","  -2.54"
"1","
  [8,]"
"1"," -14.54"
"1","
  [9,]"
"1","  -4.54"
"1","
 [10,]"
"1","   7.46"
"1","
 [11,]"
"1","   7.46"
"1","
 [12,]"
"1","   1.46"
"1","
 [13,]"
"1","  -5.54"
"1","
 [14,]"
"1","   4.46"
"1","
 [15,]"
"1","  10.46"
"1","
 [16,]"
"1","  -0.54"
"1","
 [17,]"
"1","  17.46"
"1","
 [18,]"
"1"," -12.54"
"1","
 [19,]"
"1"," -14.54"
"1","
 [20,]"
"1"," -12.54"
"1","
 [21,]"
"1","  -2.54"
"1","
 [22,]"
"1","  -3.54"
"1","
 [23,]"
"1","  -3.54"
"1","
 [24,]"
"1"," -10.54"
"1","
 [25,]"
"1","   3.46"
"1","
 [26,]"
"1","   8.46"
"1","
 [27,]"
"1","   7.46"
"1","
 [28,]"
"1","   1.46"
"1","
 [29,]"
"1","  10.46"
"1","
 [30,]"
"1","   2.46"
"1","
 [31,]"
"1","   6.46"
"1","
 [32,]"
"1","   4.46"
"1","
 [33,]"
"1","  -9.54"
"1","
 [34,]"
"1","  12.46"
"1","
 [35,]"
"1","   8.46"
"1","
 [36,]"
"1","  -3.54"
"1","
 [37,]"
"1","   5.46"
"1","
 [38,]"
"1","   6.46"
"1","
 [39,]"
"1","  -5.54"
"1","
 [40,]"
"1"," -17.54"
"1","
 [41,]"
"1"," -14.54"
"1","
 [42,]"
"1","  -0.54"
"1","
 [43,]"
"1","  20.46"
"1","
 [44,]"
"1","  -5.54"
"1","
 [45,]"
"1","  -1.54"
"1","
 [46,]"
"1"," -15.54"
"1","
 [47,]"
"1","   1.46"
"1","
 [48,]"
"1","  16.46"
"1","
 [49,]"
"1","  -7.54"
"1","
 [50,]"
"1","  -9.54"
"1","
 [51,]"
"1","  12.46"
"1","
 [52,]"
"1","   1.46"
"1","
 [53,]"
"1","   2.46"
"1","
 [54,]"
"1","  -5.54"
"1","
 [55,]"
"1","  17.46"
"1","
 [56,]"
"1","  -5.54"
"1","
 [57,]"
"1","  24.46"
"1","
 [58,]"
"1","  -7.54"
"1","
 [59,]"
"1"," -11.54"
"1","
 [60,]"
"1","   4.46"
"1","
 [61,]"
"1","   6.46"
"1","
 [62,]"
"1","  15.46"
"1","
 [63,]"
"1","  -9.54"
"1","
 [64,]"
"1","  -3.54"
"1","
 [65,]"
"1","   7.46"
"1","
 [66,]"
"1","  -4.54"
"1","
 [67,]"
"1","   1.46"
"1","
 [68,]"
"1","   2.46"
"1","
 [69,]"
"1","  -8.54"
"1","
 [70,]"
"1","  -5.54"
"1","
 [71,]"
"1","  22.46"
"1","
 [72,]"
"1","   4.46"
"1","
 [73,]"
"1"," -18.54"
"1","
 [74,]"
"1","  13.46"
"1","
 [75,]"
"1","  -1.54"
"1","
 [76,]"
"1","   9.46"
"1","
 [77,]"
"1","   4.46"
"1","
 [78,]"
"1","  -3.54"
"1","
 [79,]"
"1","  -3.54"
"1","
 [80,]"
"1","  -2.54"
"1","
 [81,]"
"1","   2.46"
"1","
 [82,]"
"1"," -11.54"
"1","
 [83,]"
"1","  -0.54"
"1","
 [84,]"
"1"," -11.54"
"1","
 [85,]"
"1","   0.46"
"1","
 [86,]"
"1","   1.46"
"1","
 [87,]"
"1"," -13.54"
"1","
 [88,]"
"1","  16.46"
"1","
 [89,]"
"1","   6.46"
"1","
 [90,]"
"1","  13.46"
"1","
 [91,]"
"1"," -15.54"
"1","
 [92,]"
"1","   4.46"
"1","
 [93,]"
"1","   0.46"
"1","
 [94,]"
"1","   7.46"
"1","
 [95,]"
"1"," -11.54"
"1","
 [96,]"
"1","  -1.54"
"1","
 [97,]"
"1","  11.46"
"1","
 [98,]"
"1","   3.46"
"1","
 [99,]"
"1","   5.46"
"1","
[100,]"
"1","  -8.54"
"1","
"
"0","# Here's another cool operation with the projection matrix."
"0",""
"0","(1/(n-1)) * t(score) %*% t(Q) %*% Q %*% score"
"1","    "
"1","     [,1]"
"1","
[1,]"
"1"," 91.84687"
"1","
"
"0","# Let's read in a couple more variables and add them to our matrix."
"0",""
"0","score_1 <- scan(here(""data"", ""scores.txt""))"
"2","cannot open file '/Users/thomastoomey/Documents/R Projects/R Class Project Folder/EDRM 718/data/scores.txt': No such file or directory"
"2","Error in file(file, ""r"") : cannot open the connection
"
