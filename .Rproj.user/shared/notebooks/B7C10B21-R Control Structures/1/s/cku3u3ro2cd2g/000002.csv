"0",""
"0","# Let's set up student outcome on a test."
"2","The working directory was changed to /Users/thomastoomey inside a notebook chunk. The working directory will be reset when the chunk is finished running. Use the knitr root.dir option in the setup chunk to change the working directory for notebook chunks."
"0","student_score <- 72"
"0",""
"0","if (student_score >= 60) {"
"0","  student_outcome <- ""PASS"""
"0","} else {"
"0","  student_outcome <- ""FAIL"""
"0","}"
"0",""
"0","student_score <- 53"
"0",""
"0","if (student_score >= 60) {"
"0","  student_outcome <- ""PASS"""
"0","} else {"
"0","  student_outcome <- ""FAIL"""
"0","}"
"0",""
"0","# Note that the else statement is optional. We could have done the above like"
"0","# this."
"0",""
"0","student_score <- 72"
"0",""
"0","student_outcome <- ""FAIL"""
"0",""
"0","if (student_score >= 60)"
"0","  student_outcome <- ""PASS"""
"0",""
"0","student_score <- 53"
"0",""
"0","student_outcome <- ""FAIL"""
"0",""
"0","if (student_score >= 60)"
"0","  student_outcome <- ""PASS"""
"0",""
"0","# Here's an alternative way that R allows us to write these statements."
"0",""
"0","student_outcome <- if (student_score >= 60) {"
"0","  ""PASS"""
"0","} else {"
"0","  ""FAIL"""
"0","}"
"0",""
"0","# We can put as many statements as we want between the curly brackets."
"0",""
"0","student_score <- 72"
"0","num_pass <- 0"
"0",""
"0","if (student_score >= 60) {"
"0","  student_outcome <- ""PASS"""
"0","  num_pass <- num_pass + 1"
"0","} else {"
"0","  student_outcome <- ""FAIL"""
"0","}"
"0",""
"0","# What if use a vector of length > 1?"
"0",""
"0","student_score <- c(72, 53, 80, 91, 83, 77, 79, 94, 87, 56)"
"0",""
"0","if (student_score >= 60) {"
"0","  student_outcome <- ""PASS"""
"0","} else {"
"0","  student_outcome <- ""FAIL"""
"0","}"
"2","the condition has length > 1 and only the first element will be used"
"0","# That's not what we wanted! Fortunately, there is an ifelse function"
"0","# for this."
"0",""
"0","student_outcome <- ifelse(student_score >= 60, ""PASS"", ""FAIL"")"
"0",""
"0","# We would like to store the scores with the results."
"0",""
"0","student_test_data <- cbind(student_score, student_outcome)"
"0",""
"0","# Type this in the console:"
"0","# View(student_test_data)"
"0",""
"0","# Let's use a logical operator to find out how many passed."
"0",""
"0","sum(student_outcome == ""PASS"")"
"1","[1]"
"1"," 8"
"1","
"
