geom_boxplot(fill="slateblue", alpha=0.5) +
xlab("ses")
ggplot(hsb2, aes(x=as.factor(ses), y=math)) +
geom_boxplot(fill="slateblue", alpha=0.7) +
xlab("ses")
hsb2 %>%
mutate(ses = factor(ses, levels = c(1, 2, 3), labels = c("low", "middle", "high"))) %>%
ggplot(aes(x = ses, y = math, group = ses, fill = ses)) +
geom_boxplot(alpha = .7) +
geom_jitter(alpha = .4) +
guides(fill = "none") +
theme_bw() +
labs(
x = "ses",
y = "math scores"
)
hsb2 %>%
mutate(ses = factor(ses, levels = c(1, 2, 3), labels = c("low", "middle", "high"))) %>%
ggplot(aes(x = ses, y = math, group = ses, fill = ses)) +
geom_boxplot(alpha = .7) +
geom_jitter(width = .05, alpha = .4) +
guides(fill = "none") +
theme_bw() +
labs(
x = "ses",
y = "math scores"
)
hsb2 %>%
mutate(ses = factor(ses, levels = c(1, 2, 3), labels = c("low", "middle", "high"))) %>%
ggplot(aes(x = ses, y = math, group = ses, fill = ses)) +
geom_boxplot(alpha = .7) +
geom_point() +
guides(fill = "none") +
theme_bw() +
labs(
x = "ses",
y = "math scores"
)
hsb2 %>%
mutate(ses = factor(ses, levels = c(1, 2, 3), labels = c("low", "middle", "high"))) %>%
ggplot(aes(x = ses, y = math, group = ses, fill = ses)) +
geom_boxplot(alpha = .7) +
geom_jitter(width = .05, alpha = .4) +
guides(fill = "none") +
theme_bw() +
labs(
x = "ses",
y = "math scores"
)
# Grouped by ses
ggplot(hsb2, aes(x=factor(schtyp), y=math, fill=factor(ses))) +
geom_col(position = "fill", stat = "identity") +
labs(x="school type", y="math score proportion", fill="ses")
# read in notes data
notes_data <- read_csv(here("Data", "Notes Data.csv"))
notes_data$lecture_type <- factor(notes_data$lecture,
levels = c(1, 2),
labels = c("disorganized", "organized"))
# plot the moderating relationship of ses
ggplot(notes_data) +
aes(x = factor(notes), y = score, color = lecture_type) +
geom_point(color = "grey") +
geom_smooth(method = "lm") +
labs(x="Type of Notes", y="Recall Test Score", color="Type of Lecture")
# read in notes data
notes_data <- read_csv(here("Data", "Notes Data.csv"))
notes_data$lecture_type <- factor(notes_data$lecture,
levels = c(1, 2),
labels = c("disorganized", "organized"))
# plot the moderating relationship of ses
ggplot(notes_data) +
aes(x = notes, y = score, color = lecture_type) +
geom_point(color = "grey") +
geom_smooth(method = "lm") +
labs(x="Type of Notes", y="Recall Test Score", color="Type of Lecture")
# read in notes data
notes_data <- read_csv(here("Data", "Notes Data.csv"))
notes_data$lecture_type <- factor(notes_data$lecture,
levels = c(1, 2),
labels = c("disorganized", "organized"))
# plot the moderating relationship of ses
ggplot(notes_data) +
aes(x = notes, y = score, color = lecture_type) +
geom_point(color = "grey") +
geom_smooth(method = "lm", se = FALSE) +
labs(x="Type of Notes", y="Recall Test Score", color="Type of Lecture")
# using the guns data from earlier in the course
guns_data <- read_csv(here("Data", "guns.csv"))
# This created a stacked bar with proportions of gun deaths based on gender
ggplot(guns_data, aes(x=factor(Intent), y=Deaths, fill=factor(Gender))) +
geom_col(position = "fill") +
labs(x="Intent", y="Number of Deaths", fill="Gender")
gd + facet_grid(Gender ~ .) +
labs(x="Intent", y="Number of Deaths", color="Gender")
# using the guns data from earlier in the course
guns_data <- read_csv(here("Data", "guns.csv"))
# This created a stacked bar with proportions of gun deaths based on gender
ggplot(guns_data, aes(x=factor(Intent), y=Deaths, fill=factor(Gender))) +
geom_col(position = "fill") +
labs(x="Intent", y="Number of Deaths", fill="Gender")
gd <- ggplot(guns_data, aes(x=Intent, y=Deaths, color=factor(Gender))) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
theme_ipsum()
gd + facet_grid(Gender ~ .) +
labs(x="Intent", y="Number of Deaths", color="Gender")
# Below is something I was playing with. Will delete probably after the tutorial
# session
# make a scatterplot faceted by gender for the relationship between gun deaths and
# intent
#gd <- ggplot(guns_data, aes(x=Intent, y=Deaths, color=factor(Gender))) +
#geom_point() +
#geom_smooth(method=lm , color="red", se=FALSE) +
#theme_ipsum()
#facet the scatter plots to show multiple relationships
#gd + facet_grid(Gender ~ .) +
#labs(x="Intent", y="Number of Deaths", color="Gender")
gd <- ggplot(guns_data, aes(x=Intent, y=Deaths, color=factor(Gender))) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
theme_ipsum()
# facet the scatter plots to show multiple relationships
gd + facet_grid(Gender ~ .) +
labs(x="Intent", y="Number of Deaths", color="Gender")
gd <- ggplot(guns_data, aes(x=Intent, y=Deaths, color=factor(Gender))) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
theme_ipsum()
# facet the scatter plots to show multiple relationships
gd + facet_grid(Gender ~ .) +
labs(x="Intent", y="Number of Deaths", color="Gender")
# using the guns data from earlier in the course
guns_data <- read_csv(here("Data", "guns.csv"))
# This created a stacked bar with proportions of gun deaths based on gender
ggplot(guns_data, aes(x=factor(Intent), y=Deaths, fill=factor(Gender))) +
geom_col(position = "fill") +
labs(x="Intent", y="Number of Deaths", fill="Gender")
# Below is something I was playing with. Will delete probably after the tutorial
# session
# make a scatterplot faceted by gender for the relationship between gun deaths and
# intent
gd <- ggplot(guns_data, aes(x=Intent, y=Deaths, color=factor(Gender))) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
theme_ipsum()
# facet the scatter plots to show multiple relationships
gd + facet_grid(Gender ~ .) +
labs(x="Intent", y="Number of Deaths", color="Gender")
library(here)
college_data <- read.csv(here("Data", "College Study Data.csv"))
college_data_probs <- problems(college_data)
library(tidyverse)
library(here)
college_data <- read.csv(here("Data", "College Study Data.csv"))
college_data_probs <- problems(college_data)
View(college_data_probs)
library(here)
college_data <- read_csv(here("Data", "College Study Data.csv"))
college_data_probs <- problems(college_data)
View(college_data)
college_data
college_data_probs <- problems(college_data)
college_data_probs
college_data_original <- read.csv("Data", "College Study Data.csv")
college_data_original <- read.csv(here("Data", "College Study Data.csv"))
college_data_original[college_data_probs$row, ]
college_data[college_data_probs$row, ]
college_data$id[10274] <- 10274
college_data_original[college_data_probs$row, ]
college_data_original$id[10274] <- 10274
college_data_original$id[10274] <- 10274
college_data_original$gender[10274] <- "male"
college_data_original$class[10274] <- "junior"
college_data_original$gpa[10274] <- 2.68
college_data_original$scale1[10274] <- 3
college_data_original$scale2[10274] <- 8
college_data_original
college_data_original <- read.csv(here("Data", "College Study Data.csv"))
college_data_original[college_data_probs$row, ]
college_data[college_data_probs$row, ]
college_data
college_data$row[10274]
college_data[10274]
college_data_original
college_data <- as_tibble(college_data_original)
college_data <- as_tibble(college_data_original)
college_data
college_data_original
college_data_probs <- problems(college_data)
college_data_probs
View(college_data_probs)
library(here)
college_data <- read_csv(here("Data", "College Study Data.csv"))
college_data
college_data_probs <- problems(college_data)
college_data_probs
college_data_original <- read.csv(here("Data", "College Study Data.csv"))
college_data_original[college_data_probs$row, ]
college_data[college_data_probs$row, ]
college_data[10274, ]
college_data$id[10274] <- 10274
college_data$gender[10274] <- "male"
college_data$gender[10274] <- "male"
college_data$class[10274] <- "junior"
college_data$gpa[10274] <- 2.68
college_data$scale1[10274] <- 3
college_data$scale2[10274] <- 8
college_data[10274, ]
college_data$id[10274] <- 10274
college_data$gpa[11780] <- 2.80
college_data$id[10274] <- 10274
college_data[10274, ]
college_data[11780, ]
college_data[11780, ]
college_data$scale2[12225] <- 4
college_data[12225, ]
min(college_data$id)
max(college_data$id)
length(unique(college_data$id))
length(unique(college_data$id))
min(college_data$id)
max(college_data$id)
# checking that all IDs are unique
length(unique(college_data$id))
table(college_data$gender)
college_data$id[college_data$gender == "Female"]
college_data[5513, ]
college_data$gender[5513] <- "female"
college_data[5513]
college_data[5513, ]
college_data$id[college_data$gender == "Male"]
college_data[8963, ]
college_data$gender[8963] <- "male"
college_data[8963, ]
college_data$id[college_data$gender == "senior"]
college_data[3020, ]
college_data$gender[3020] <- "female"
college_data$class[3020] <- "senior"
college_data[3020, ]
table(college_data$gender)
View(college_data)
table(college_data$class)
college_data$id[college_data$class == "junirr"]
college_data[11928, ]
college_data$class[11928] <- "junirr"
college_data$class[11928] <- "junior"
college_data[11928, ]
college_data$id[college_data$class == "SENIOR"]
college_data[6472, ]
college_data$class[6472] <- "senior"
college_data[6472, ]
table(college_data$class)
table(college_data$gpa)
min(college_data$gpa, na.rm = TRUE)
max(college_data$gpa, na.rm = TRUE)
college_data$id[college_data$gpa > 4.00 & !is.na(college_data$gpa)]
college_data[10918, ]
college_data$gpa[10918] <- NA
college_data$gpa[10918, ]
college_data[10918, ]
min(college_data$gpa)
max(college_data$gpa)
min(college_data$gpa, na.rm = TRUE)
max(college_data$gpa, na.rm = TRUE)
table(college_data$scale1)
college_data$scale1[college_data$scale1 == -99] <- NA
table(college_data$scale1)
table(college_data$scale2)
college_data$scale2[college_data$scale1 == -999] <- NA
college_data$scale2[college_data$scale1 == -99] <- NA
college_data$scale2[college_data$scale1 == -9] <- NA
college_data$scale2[college_data$scale1 == 12] <- NA
table(college_data$scale2)
college_data$scale2[college_data$scale2 == -999] <- NA
college_data$scale2[college_data$scale2 == -99] <- NA
college_data$scale2[college_data$scale2 == -9] <- NA
college_data$scale2[college_data$scale2 == 12] <- NA
table(college_data$scale2)
table(college_data$scale1)
college_data
college_data$id <- factor(college_data$id)
college_data$gender <- factor(college_data$gender)
college_data$class <- factor(college_data$class)
college_data$scale1 <- as.integer(college_data$scale1)
college_data$scale2 <- as.integer(college_data$scale2)
college_data
# now writing the cleaned data
write.csv(college_data, here("Data", "College Study Data (Clean).csv"))
rm(list = ls())
source(here("Functions", "College Data Check.R"))
clean_collegedata <- read.csv(here("Data", "College Study Data (Clean).csv"))
college_data_check(clean_collegedata)
rm(list = ls())
source(here("Functions", "College Data Check.R"))
clean_collegedata <- read.csv(here("Data", "College Study Data (Clean).csv"))
College_Data_Check(Clean_CollegeData)
rm(list = ls())
source(here("Functions", "College Data Check.R"))
clean_collegedata <- read.csv(here("Data", "College Study Data (Clean).csv"))
College_Data_Check(CollegeData)
rm(list = ls())
source(here("Functions", "College Data Check.R"))
clean_collegedata <- read.csv(here("Data", "College Study Data (Clean).csv"))
College_Data_Check(Clean_CollegeData)
# now writing the cleaned data
clean_college_data <- write.csv(college_data, here("Data", "College Study Data (Clean).csv"))
rm(list = ls())
source(here("Functions", "College Data Check.R"))
clean_collegedata <- read.csv(here("Data", "College Study Data (Clean).csv"))
College_Data_Check(clean_collegedata)
library(here)
college_data <- read_csv(here("Data", "College Study Data.csv"))
college_data
college_data_probs <- problems(college_data)
college_data_probs
college_data_original <- read.csv(here("Data", "College Study Data.csv"))
college_data_original[college_data_probs$row, ]
college_data[college_data_probs$row, ]
college_data$gpa[11780] <- 2.80
college_data[11780, ]
college_data$id[10274] <- 10274
college_data$gender[10274] <- "male"
college_data$class[10274] <- "junior"
college_data$gpa[10274] <- 2.68
college_data$scale1[10274] <- 3
college_data$scale2[10274] <- 8
college_data[10274, ]
college_data$scale2[12225] <- 4
college_data[12225, ]
min(college_data$id)
max(college_data$id)
# checking that all IDs are unique
length(unique(college_data$id))
table(college_data$gender)
# looking for Female
college_data$id[college_data$gender == "Female"]
# checking the row
college_data[5513, ]
# changing it
college_data$gender[5513] <- "female"
# checking again
college_data[5513, ]
# looking for Male
college_data$id[college_data$gender == "Male"]
# checking the row
college_data[8963, ]
# changing it
college_data$gender[8963] <- "male"
# checking again
college_data[8963, ]
# looking for senior
college_data$id[college_data$gender == "senior"]
# checking the row
college_data[3020, ]
# gender and class were swapped!
# changing gender to female
college_data$gender[3020] <- "female"
# changing class to senior
college_data$class[3020] <- "senior"
# checking again
college_data[3020, ]
table(college_data$gender)
table(college_data$class)
# looking for junirr
college_data$id[college_data$class == "junirr"]
# checking the row
college_data[11928, ]
# changing class to senior
college_data$class[11928] <- "junior"
# checking again
college_data[11928, ]
# looking for SENIOR
college_data$id[college_data$class == "SENIOR"]
# checking the row
college_data[6472, ]
# changing class to senior
college_data$class[6472] <- "senior"
# checking again
college_data[6472, ]
table(college_data$class)
min(college_data$gpa, na.rm = TRUE)
max(college_data$gpa, na.rm = TRUE)
college_data$id[college_data$gpa > 4.00 & !is.na(college_data$gpa)]
# looking at the row
college_data[10918, ]
college_data$gpa[10918] <- NA
college_data[10918, ]
min(college_data$gpa, na.rm = TRUE)
max(college_data$gpa, na.rm = TRUE)
table(college_data$scale1)
college_data$scale1[college_data$scale1 == -99] <- NA
table(college_data$scale1)
table(college_data$scale2)
college_data$scale2[college_data$scale2 == -999] <- NA
college_data$scale2[college_data$scale2 == -99] <- NA
college_data$scale2[college_data$scale2 == -9] <- NA
college_data$scale2[college_data$scale2 == 12] <- NA
table(college_data$scale2)
college_data
college_data$id <- factor(college_data$id)
college_data$gender <- factor(college_data$gender)
college_data$class <- factor(college_data$class)
college_data$scale1 <- as.integer(college_data$scale1)
college_data$scale2 <- as.integer(college_data$scale2)
college_data
# now writing the cleaned data
write.csv(college_data, here("Data", "College Study Data (Clean).csv"))
rm(list = ls())
source(here("Functions", "College Data Check.R"))
clean_collegedata <- read.csv(here("Data", "College Study Data (Clean).csv"))
College_Data_Check(clean_collegedata)
library(readxl)
johnson_elem <- read_excel(here("Data", "Johnson Elementary ELA Project.xlsx"),
skip = 3)
View(johnson_elem)
johnson_elem <- rename(johnson_elem, "Room Number" = "...1")
View(johnson_elem)
johnson_elem <- johnson_elem %>%
fill(Room Number)
johnson_elem <- johnson_elem %>%
fill("Room Number")
View(johnson_elem)
johnson_elem <- johnson_elem %>%
separate(Tardies; Absences, into = c("Tardies", "Absences"))
johnson_elem <- johnson_elem %>%
separate("Tardies; Absences", into = c("Tardies", "Absences"))
View(johnson_elem)
johnson_elem <- johnson_elem %>%
gather("1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter",
key = "Quarter",
value = "Score")
View(johnson_elem)
johnson_elem <- johnson_elem %>%
gather("1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter",
key = "Quarter",
value = "Score",
na.rm = TRUE)
johnson_elem <- read_excel(here("Data", "Johnson Elementary ELA Project.xlsx"),
skip = 3)
johnson_elem <- rename(johnson_elem, "Room Number" = "...1")
johnson_elem <- johnson_elem %>%
fill("Room Number")
johnson_elem <- johnson_elem %>%
separate("Tardies; Absences", into = c("Tardies", "Absences"))
johnson_elem <- johnson_elem %>%
gather("1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter",
key = "Quarter",
value = "Score",
na.rm = TRUE)
View(johnson_elem)
johnson_elem <- johnson_elem %>%
gather("1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter",
key = "Quarter",
value = "Score")
library(readxl)
johnson_elem <- read_excel(here("Data", "Johnson Elementary ELA Project.xlsx"),
skip = 3)
johnson_elem <- rename(johnson_elem, "Room Number" = "...1")
# Fill names of room numbers
johnson_elem <- johnson_elem %>%
fill("Room Number")
# Separate tardies and absences
johnson_elem <- johnson_elem %>%
separate("Tardies; Absences", into = c("Tardies", "Absences"))
johnson_elem <- johnson_elem %>%
gather("1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter",
key = "Quarter",
value = "Score")
View(johnson_elem)
johnson_elem <- johnson_elem %>%
arrange("Student ID", "Quarter")
johnson_elem
johnson_elem <- johnson_elem[1:828, ]
johnson_elem
library(readxl)
johnson_elem <- read_excel(here("Data", "Johnson Elementary ELA Project.xlsx"),
skip = 3)
johnson_elem <- rename(johnson_elem, "Room Number" = "...1")
# Fill names of room numbers
johnson_elem <- johnson_elem %>%
fill("Room Number")
# Separate tardies and absences
johnson_elem <- johnson_elem %>%
separate("Tardies; Absences", into = c("Tardies", "Absences"))
# Group quarter scores into one quarter variable
johnson_elem <- johnson_elem %>%
gather("1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter",
key = "Quarter",
value = "Score")
# Removing the extra rows
johnson_elem <- johnson_elem %>%
arrange("Student ID", "Quarter")
johnson_elem
library(readxl)
johnson_elem <- read_excel(here("Data", "Johnson Elementary ELA Project.xlsx"),
skip = 3)
johnson_elem <- rename(johnson_elem, "Room Number" = "...1")
# Fill names of room numbers
johnson_elem <- johnson_elem %>%
fill("Room Number")
# Separate tardies and absences
johnson_elem <- johnson_elem %>%
separate("Tardies; Absences", into = c("Tardies", "Absences"))
# Group quarter scores into one quarter variable
johnson_elem <- johnson_elem %>%
gather("1st Quarter", "2nd Quarter", "3rd Quarter", "4th Quarter",
key = "Quarter",
value = "Score")
johnson_elem
johnson_elem[829, ]
johnson_elem
write_csv(johnson_elem, here("Data", "Johnson Elementary ELA Project_Cleaned.csv"))
